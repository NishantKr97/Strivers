class Solution {
public:
    int search(vector<int>& nums, int target) {
        int pivot = nums[0];
        int low = 0;
        int high = nums.size()-1;
        
        while(low <= high) {
            cout<<low<<" "<<high<<endl;
            int mid = (low + high) / 2;
            if(nums[mid] == target) {
                return mid;
            }
            if(nums[low] <= nums[mid]) {
                if(target >= nums[low] && target <= nums[mid]) {
                    high = mid - 1;
                    // cout<<nums[high]<<endl;
                } else {
                    low = mid + 1;
                    // cout<<nums[low]<<endl;
                }
            } else {
                if(target >= nums[mid] && target <= nums[high]) {
                    low = mid + 1;    
                } else {
                    high = mid - 1;
                }
                    
                // cout<<nums[low]<<endl;
            }
            
        }
        
        return -1;
    }
};