    int singleNonDuplicate(vector<int>& nums) {
        int low = 0;
        int high = nums.size() - 2;
        if(high == 0) {
            return nums[0];
        }
        while(low <= high) {
            int mid = (low + high) / 2;
            cout<<low<<" "<<mid<<" "<<high<<endl;

//             if(low == high) {
                
//             }
            if(mid % 2 != 0 && (mid+1 <= high+1) && nums[mid+1] == nums[mid] ) {
                high = mid-1;
            } else if(mid % 2 != 0 && (mid-1 >= 0) && nums[mid-1] == nums[mid]) {
                low = mid+1;
            } else if(mid % 2 == 0 && (mid-1 >= 0) && nums[mid-1] == nums[mid]) {
                high = mid-1;
            } else if(mid % 2 == 0 && (mid+1 <= high+1) && nums[mid+1] == nums[mid]){
                low = mid+1;
            } else {
                return nums[mid];
            }
            cout<<nums[mid]<<" "<<mid<<endl;
        }
        
        return nums[low];
    }