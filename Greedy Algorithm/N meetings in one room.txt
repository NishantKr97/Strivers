//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends

#include<bits/stdc++.h>
struct meeting {
    int start;
    int end;
    int pos;
};

class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    
    bool static comparator(struct meeting meet1, struct meeting meet2) {
        if(meet1.end < meet2.end) return true;
        return false;
    }
    
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        struct meeting meet[n];
        
        for (int i=0;i<n;i++) {
            meet[i].start = start[i];
            meet[i].end = end[i];
            meet[i].pos = i;
        }
        
        sort(meet, meet+n, comparator);
        
                
        int count = 0;
        int lastMeet;
        for(int i=0;i<n;i++) {
            if(i == 0 || meet[i].start > lastMeet) {
                count++;
                lastMeet = meet[i].end;
            }
        }
        
        return count;
        
        
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++) cin >> start[i];

        for (int i = 0; i < n; i++) cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(start, end, n);
        cout << ans << endl;
    }
    return 0;
}
// } Driver Code Ends